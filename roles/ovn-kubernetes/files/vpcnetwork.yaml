
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  name: vpcnetworks.k8s.ovn.org
spec:
  group: k8s.ovn.org
  names:
    kind: VPCNetwork
    listKind: VPCNetworkList
    plural: vpcnetworks
    shortNames:
      - vnet
    singular: vpcnetwork
  scope: Cluster
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.subnets
          name: SUBNETS
          type: string
      name: v1
      schema:
        openAPIV3Schema:
          description: A vpc network has a set of independent virtual k8s network topology.
            In this set of virtual k8s network, users add namespaces to the virtual
            k8s network by creating subnets. Its behavior is like adding new k8s nodes
            in the real k8s network is also called default vpc.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Configuration information of virtual k8s network
              properties:
                cidr:
                  description: vpc network private segment address space
                  type: string
                gateways:
                  description: Gateway information of vpc network
                  items:
                    description: Describes the gateway information of the vpc network
                    properties:
                      ip:
                        description: Gateway IP address
                        type: string
                      node:
                        description: Name of the k8s node where the gateway is located
                        type: string
                    required:
                      - ip
                    type: object
                  type: array
                peers:
                  description: Interconnected peer cluster information
                  items:
                    description: Peer cluster connection information
                    properties:
                      ip:
                        description: Peer cluster address
                        type: string
                      name:
                        description: Peer cluster name
                        type: string
                      port:
                        description: Peer cluster port
                        format: int32
                        maximum: 65535
                        minimum: 1
                        type: integer
                    required:
                      - ip
                      - name
                      - port
                    type: object
                  type: array
                subnetLength:
                  description: Length of vpc subnet managed by vpc network
                  type: integer
              required:
                - cidr
                - subnetLength
              type: object
            status:
              description: vpc network runtime information
              properties:
                subnets:
                  description: List of subnets created under the current network, separated
                    by commas
                  type: string
              required:
                - subnets
              type: object
          required:
            - spec
          type: object
      served: true
      storage: true
      subresources: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
